Task 1
1. Откройте https://opensource-demo.orangehrmlive.com
2. Залогиньтесь и перейдите в PIM - > Employee List # если будет ошибка логина и пароля, тогда повторите попытку через
несколько часов
3. Нажмите на имя любого сотрудника (произойдёт переход в его карточку с данными)
• если список пуст, создайте сотрудника вручную на этой же вкладке, нажав на"Add"
4. Добавьте проверку, что радиокнопка с противоположным полом сотрудника в данный момент недоступна для выбора
5. Добавьте проверку, что селектор Nationality в данный момент недоступен для выбора
6. В карточке сотрудника, нажмите на кнопку "Edit"
7. Измените пол сотрудника на противоположный
8. Добавьте проверку, что радиокнопка с полом сотрудника действительно выбрана(атрибут появится после 12-го шага)
9. В селекторе Nationality выберите самую последнюю страну в списке
10. Добавьте проверку, что в селекторе Nationality выбрана последняя страна в списке(атрибут появится после 12-го шага)
11. Выберите первоначальный пол сотрудника, а в селекторе Nationality выберите вариант "-- Select --"
12. Сохраните изменения, нажав на кнопку "Save"


Task 2
1. Настройте открытие окон в полный размер, с помощью команды из предыдущего урока: driver.maximize_window()
• Для большей стабильности тестов, рекомендуется использовать её и в дальнейшем, указав сразу после инициализации драйвера: driver = webdriver.Chrome()
2. Откройте страницу http://demo.automationtesting.in/Register.html
3. Заполните произвольными данными только обязательные поля(*) в регистрации(а так же поля: Date of Birth, Password, Confirm Password)
• Поле телефон должно содержать: 10 цифр, без +, например: 1234567890 ; если номер уже существует в системе – появится ошибка
• Значение в селекторе country, date of birth выбирайте с помощью класса Select из библиотеки WebDriver
• Если будет отображаться селектор "country", состоящий из 1-го варианта, тогда его можно не заполнять, и также можно пропустить 7-й пункт этого задания
• Поля password, confirm password должны содержать: не менее 6 символов, маленькую букву, большую букву, цифру
4. Загрузите любой файл в раздел "Photo" вверху справа
5. Проскролльте страницу вниз на 300 пикселей
6. Нажмите на кнопку Submit # если будет селектор "country", состоящий из 1-го варианта, тогда кнопка не нажмется, в таком варианте будет окей. Просто добавьте код для её нажатия.
7. Добавьте проверку, что произошёл переход на страницу: http://demo.automationtesting.in/WebTable.html
• Дополнительно: улучшите проверку таким образом, чтобы в консоли выводилось содержательное сообщение, из которого можно понять, на какой странице находимся
сейчас и на какой странице ожидаем находиться.
• Не забывайте использовать time.sleep() если нужно
• В задании можно иногда использовать XPATH (пример структуры: //тег[@атрибут='значение']
• Будет также полезно вспомнить про составной селектор (пример структуры: .class .other class) ; (пример структуры 2: #someid .someclass)
• Ещё здесь может пригодиться nth-child() (пример структуры: element:nth-child(порядковый номер)


Task 3
1. Откройте страницу: http://demo.automationtesting.in/WebTable.html
2. Перейдите на вкладку "SwitchTo" - > "Alerts"
• Здесь используйте клики(их будет 2) вместо выбора по селектору
• Если не получится перейти на вкладку Alerts, тогда откройте страницу http://demo.automationtesting.in/Alerts.html и выполняйте задание начиная с 3-го шага
3. Нажмите на кнопку "click the button to display an alert box:" # перед нажатием добавьте паузу
4. Выведите в консоль содержимое окна alert и нажмите "OK"
• Дополнительно(если получится): добавьте тест, что содержимое равно тексту "I am an alert box!" , а если не равно, тогда в консоли выводится сообщение об ошибке
5. Получите адрес текущей ссылки
6. Откройте новую вкладку в браузере, введите ссылку из предыдущего шага и перейдите по ней # перед открытием добавьте паузу
7. Нажмите на "Alert with OK & Cancel" -> "click the button to display a confirm box" # перед нажатием добавьте паузу
8. В модальном окне нажмите "Отмена"
9. Откройте новую вкладку в браузере, введите ссылку из шага 5 и перейдите по ней # перед открытием добавьте паузу
10. Нажмите на "Alert with Textbox"-> "click the button to demonstrate the prompt box" # перед нажатием добавьте паузу
11. В модальном окне, введите текст: "Ура! Задание выполнено!" и нажмите "OK"
• Если вдруг никак не будет получаться переключаться между окнами браузера, выполните всё задание в одном окне
• Если считаете, что селектор подобран правильно и почему-то не срабатывает, используйте между командами time.sleep(5)

Task 4
1. Откройте страницу: http://demo.automationtesting.in/WebTable.html
2. Перейдите в раздел "More" -> "Loader"
3. Реализуйте явное ожидание(EC) для отображения текста "Run"
4. Нажмите кнопку "Run"
5. Реализуйте явное ожидание(EC) что слово "Lorem" содержится в тексте модального окна
6. Реализуйте явное ожидание(EC) для нажатия в модальном окне на кнопку "Save Changes" и нажмите на неё

Task 5
1. Откройте страницу: http://demo.automationtesting.in/WebTable.html
2. Реализуйте неявное ожидание поиска элементов
3. Перейдите в раздел "More" -> "Dynamic Data"
• Здесь и в дальнейших заданиях используйте клики(их будет 2) вместо выбора по селектору
4. Добавьте проверку, что заголовок окна равен "Loading the data Dynamically"
5. Нажмите на кнопку "Get Dynamic Data"
6. Выведите в консоли адрес ссылки, которая сгенерируется в теге img (похожий на: https://randomuser.me/api/portraits/...)
• Чтобы это сделать, используйте метод .get_attribute("атрибут")
• Если адрес ссылки сильно отличается от примера в шаге 6, тогда после нажатия на кнопку из шага 5 добавьте паузу time.sleep(3)

Task 6
1. Откройте страницу: http://demo.automationtesting.in/WebTable.html
2. Реализуйте неявное ожидание поиска элементов
3. Перейдите в раздел "More" -> "File Upload"
4. Загрузите файл с картинкой
5. Нажмите на кнопку "Remove"
6. Загрузите пустой файл с расширением .txt (можно создать в блокноте)
7. Закройте появившееся красное сообщение об ошибке
• Дополнительно(если получится): добавьте проверку что кнопка upload недоступна для нажатия

Task 7
1. Откройте страницу: http://demo.automationtesting.in/WebTable.html
2. Реализуйте неявное ожидание поиска элементов
3. Перейдите в раздел "More" -> "JQuery ProgressBar"
4. Реализуйте явное ожидание(EC) для проверки, что кнопка "Close" невидима
• Для этого, предварительно вручную нажмите на кпоку "Start Download" и в появившемся окне возьмите селектор кнопки "Close"
5. Нажмите кнопку "Start Download"
6. Реализуйте явное ожидание(EC) для проверки, что кнопка называется "Cancel Download"
7. Закройте окно. Снова откройте
8. Реализуйте явное ожидание(EC) для проверки, что в окне присутствует текст "Complete!"

Task 8
1. Откройте страницу: http://demo.automationtesting.in/WebTable.html
2. Реализуйте неявное ожидание поиска элементов
3. Перейдите в раздел "Switch to" -> "Windows"
4. В разделе "Open New Tabbed Windows" нажмите кнопку "click"
5. Переключите драйвер на вторую вкладку - > закройте её -> переключитесь обратно на первую вкладку
• Чтобы закрыть вкладку: после переключения на неё на новой строке добавьте команду driver.close()
6. Перейдите в раздел "Separate Multiple Windows" и нажмите "click"
7. Переключите драйвер на вторую вкладку # здесь нужно будет использовать handles[2], тк ранее закрытая вкладка с шага 4 останется в
памяти
8. Используя явное ожидание(EC), проверьте что ссылка = "http://demo.automationtesting.in/Index.html"
9. Используя явное ожидание(EC), проверьте что в браузере открыто 3 вкладки, выведите в консоли результат проверки (True/False)
10. В поле "email" напишите любую почту и нажмите на кнопку в виде ">" справа от поля
11. Используя явное ожидание(EC), проверьте что ссылка = "http://demo.automationtesting.in/Register.html"
• Дополнительно(необязательно): для всех EC, вынесите часть проверки в переменную (как на последнем слайде перед практикой)

Task 9 Bonus
Вызвать в браузере алерт и добавить в него текст.

Task 10 Bonus
Открыть Google.com, сделать скриншот страницы, дав ему название

Task 11 Bonus
Открыть Google.com, сделать запрос, вывести в консоль количество найденных результатов
Сделать скриншот страницы, назвав его числом найденных результатов